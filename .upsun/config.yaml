#######################################################################################################################
# Upsun demo project configuration
#######################################################################################################################
# Application configuration.
applications:    
    # App 1: Frontend (JS)
    frontend:

        source:
            root: "frontend"

        type: "nodejs:18"

        build:
            flavor: none
        # variables:
        #     env:
        #         N_PREFIX: /app/.global
        hooks:
            build: |
                set -e
                npm install
                export REACT_APP_BACKEND_URL="/"
                export REACT_APP_PROJECT_ID=$PLATFORM_PROJECT
                npm run build
            # deploy: |
            #     set -eux
            #     echo "window.APP_BASE_URL = '$(echo $PLATFORM_ROUTES | base64 --decode | jq -r 'to_entries[] | select (.value.id == "frontend") | .key')';" > build/dynamic/vars.js

        # mounts:
        #     "/build/dynamic": # We will dump a var.js here to provide variable information about the project, such as routes, to React
        #         source: "local" # "local" sources are unique to the app, while "service" sources can be shared among apps.
        #         source_path: "build/dynamic" # The subdirectory within the mounted disk (the source) where the mount should point.

        relationships:
           api: "backend:http"

        web:
            locations:
                /:
                    root: build
                    index:
                        - index.html
                    expires: 2m
                    scripts: false
                    allow: true
                    rules:
                        static\/*:
                            expires: 365d
                        dynamic\/*:
                            expires: -1

    # App 2: Backend (Python)
    backend:

        source:
            root: "backend"

        type: "python:3.11"

        build:
            flavor: none
        hooks:
            build: |
                set -eux
                pip install --upgrade pip
                pip install -r requirements.txt
                
        web:
            commands:
                start: "gunicorn main:app"
            upstream:
                socket_family: tcp
            locations:
                /:
                    passthru: true

# ######################################################################################################################
# # Step 3: Add a service. Uncomment this section.
# ######################################################################################################################
#        relationships:
#            redis_session: "redis_persistent:redis"

# services:
#    redis_persistent:
#        type: "redis-persistent:7.0"
# ######################################################################################################################
        
# Routes configuration.
routes:
    "https://{default}/":
        id: frontend
        type: upstream
        upstream: "frontend:http"

    "https://www.{default}":
        id: www-redirect
        type: redirect
        to: "https://{default}/"

    "https://{default}/api/":
        id: backend
        type: upstream
        upstream: "backend:http"
